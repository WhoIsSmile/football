package com.eastng.football.core.entity.lottery;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class OddsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public OddsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andMatchNoIsNull() {
            addCriterion("MATCH_NO is null");
            return (Criteria) this;
        }

        public Criteria andMatchNoIsNotNull() {
            addCriterion("MATCH_NO is not null");
            return (Criteria) this;
        }

        public Criteria andMatchNoEqualTo(String value) {
            addCriterion("MATCH_NO =", value, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoNotEqualTo(String value) {
            addCriterion("MATCH_NO <>", value, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoGreaterThan(String value) {
            addCriterion("MATCH_NO >", value, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoGreaterThanOrEqualTo(String value) {
            addCriterion("MATCH_NO >=", value, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoLessThan(String value) {
            addCriterion("MATCH_NO <", value, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoLessThanOrEqualTo(String value) {
            addCriterion("MATCH_NO <=", value, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoLike(String value) {
            addCriterion("MATCH_NO like", value, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoNotLike(String value) {
            addCriterion("MATCH_NO not like", value, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoIn(List<String> values) {
            addCriterion("MATCH_NO in", values, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoNotIn(List<String> values) {
            addCriterion("MATCH_NO not in", values, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoBetween(String value1, String value2) {
            addCriterion("MATCH_NO between", value1, value2, "matchNo");
            return (Criteria) this;
        }

        public Criteria andMatchNoNotBetween(String value1, String value2) {
            addCriterion("MATCH_NO not between", value1, value2, "matchNo");
            return (Criteria) this;
        }

        public Criteria andCompanyIsNull() {
            addCriterion("COMPANY is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIsNotNull() {
            addCriterion("COMPANY is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyEqualTo(String value) {
            addCriterion("COMPANY =", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotEqualTo(String value) {
            addCriterion("COMPANY <>", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyGreaterThan(String value) {
            addCriterion("COMPANY >", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyGreaterThanOrEqualTo(String value) {
            addCriterion("COMPANY >=", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyLessThan(String value) {
            addCriterion("COMPANY <", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyLessThanOrEqualTo(String value) {
            addCriterion("COMPANY <=", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyLike(String value) {
            addCriterion("COMPANY like", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotLike(String value) {
            addCriterion("COMPANY not like", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyIn(List<String> values) {
            addCriterion("COMPANY in", values, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotIn(List<String> values) {
            addCriterion("COMPANY not in", values, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyBetween(String value1, String value2) {
            addCriterion("COMPANY between", value1, value2, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotBetween(String value1, String value2) {
            addCriterion("COMPANY not between", value1, value2, "company");
            return (Criteria) this;
        }

        public Criteria andChangeTimeIsNull() {
            addCriterion("CHANGE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andChangeTimeIsNotNull() {
            addCriterion("CHANGE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andChangeTimeEqualTo(Date value) {
            addCriterion("CHANGE_TIME =", value, "changeTime");
            return (Criteria) this;
        }

        public Criteria andChangeTimeNotEqualTo(Date value) {
            addCriterion("CHANGE_TIME <>", value, "changeTime");
            return (Criteria) this;
        }

        public Criteria andChangeTimeGreaterThan(Date value) {
            addCriterion("CHANGE_TIME >", value, "changeTime");
            return (Criteria) this;
        }

        public Criteria andChangeTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CHANGE_TIME >=", value, "changeTime");
            return (Criteria) this;
        }

        public Criteria andChangeTimeLessThan(Date value) {
            addCriterion("CHANGE_TIME <", value, "changeTime");
            return (Criteria) this;
        }

        public Criteria andChangeTimeLessThanOrEqualTo(Date value) {
            addCriterion("CHANGE_TIME <=", value, "changeTime");
            return (Criteria) this;
        }

        public Criteria andChangeTimeIn(List<Date> values) {
            addCriterion("CHANGE_TIME in", values, "changeTime");
            return (Criteria) this;
        }

        public Criteria andChangeTimeNotIn(List<Date> values) {
            addCriterion("CHANGE_TIME not in", values, "changeTime");
            return (Criteria) this;
        }

        public Criteria andChangeTimeBetween(Date value1, Date value2) {
            addCriterion("CHANGE_TIME between", value1, value2, "changeTime");
            return (Criteria) this;
        }

        public Criteria andChangeTimeNotBetween(Date value1, Date value2) {
            addCriterion("CHANGE_TIME not between", value1, value2, "changeTime");
            return (Criteria) this;
        }

        public Criteria andWinIsNull() {
            addCriterion("WIN is null");
            return (Criteria) this;
        }

        public Criteria andWinIsNotNull() {
            addCriterion("WIN is not null");
            return (Criteria) this;
        }

        public Criteria andWinEqualTo(BigDecimal value) {
            addCriterion("WIN =", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinNotEqualTo(BigDecimal value) {
            addCriterion("WIN <>", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinGreaterThan(BigDecimal value) {
            addCriterion("WIN >", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("WIN >=", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinLessThan(BigDecimal value) {
            addCriterion("WIN <", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinLessThanOrEqualTo(BigDecimal value) {
            addCriterion("WIN <=", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinIn(List<BigDecimal> values) {
            addCriterion("WIN in", values, "win");
            return (Criteria) this;
        }

        public Criteria andWinNotIn(List<BigDecimal> values) {
            addCriterion("WIN not in", values, "win");
            return (Criteria) this;
        }

        public Criteria andWinBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WIN between", value1, value2, "win");
            return (Criteria) this;
        }

        public Criteria andWinNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WIN not between", value1, value2, "win");
            return (Criteria) this;
        }

        public Criteria andDrawIsNull() {
            addCriterion("DRAW is null");
            return (Criteria) this;
        }

        public Criteria andDrawIsNotNull() {
            addCriterion("DRAW is not null");
            return (Criteria) this;
        }

        public Criteria andDrawEqualTo(BigDecimal value) {
            addCriterion("DRAW =", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawNotEqualTo(BigDecimal value) {
            addCriterion("DRAW <>", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawGreaterThan(BigDecimal value) {
            addCriterion("DRAW >", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("DRAW >=", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawLessThan(BigDecimal value) {
            addCriterion("DRAW <", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawLessThanOrEqualTo(BigDecimal value) {
            addCriterion("DRAW <=", value, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawIn(List<BigDecimal> values) {
            addCriterion("DRAW in", values, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawNotIn(List<BigDecimal> values) {
            addCriterion("DRAW not in", values, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DRAW between", value1, value2, "draw");
            return (Criteria) this;
        }

        public Criteria andDrawNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DRAW not between", value1, value2, "draw");
            return (Criteria) this;
        }

        public Criteria andLoseIsNull() {
            addCriterion("LOSE is null");
            return (Criteria) this;
        }

        public Criteria andLoseIsNotNull() {
            addCriterion("LOSE is not null");
            return (Criteria) this;
        }

        public Criteria andLoseEqualTo(BigDecimal value) {
            addCriterion("LOSE =", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseNotEqualTo(BigDecimal value) {
            addCriterion("LOSE <>", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseGreaterThan(BigDecimal value) {
            addCriterion("LOSE >", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LOSE >=", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseLessThan(BigDecimal value) {
            addCriterion("LOSE <", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LOSE <=", value, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseIn(List<BigDecimal> values) {
            addCriterion("LOSE in", values, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseNotIn(List<BigDecimal> values) {
            addCriterion("LOSE not in", values, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LOSE between", value1, value2, "lose");
            return (Criteria) this;
        }

        public Criteria andLoseNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LOSE not between", value1, value2, "lose");
            return (Criteria) this;
        }

        public Criteria andFirstOddsIsNull() {
            addCriterion("FIRST_ODDS is null");
            return (Criteria) this;
        }

        public Criteria andFirstOddsIsNotNull() {
            addCriterion("FIRST_ODDS is not null");
            return (Criteria) this;
        }

        public Criteria andFirstOddsEqualTo(String value) {
            addCriterion("FIRST_ODDS =", value, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsNotEqualTo(String value) {
            addCriterion("FIRST_ODDS <>", value, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsGreaterThan(String value) {
            addCriterion("FIRST_ODDS >", value, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsGreaterThanOrEqualTo(String value) {
            addCriterion("FIRST_ODDS >=", value, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsLessThan(String value) {
            addCriterion("FIRST_ODDS <", value, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsLessThanOrEqualTo(String value) {
            addCriterion("FIRST_ODDS <=", value, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsLike(String value) {
            addCriterion("FIRST_ODDS like", value, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsNotLike(String value) {
            addCriterion("FIRST_ODDS not like", value, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsIn(List<String> values) {
            addCriterion("FIRST_ODDS in", values, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsNotIn(List<String> values) {
            addCriterion("FIRST_ODDS not in", values, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsBetween(String value1, String value2) {
            addCriterion("FIRST_ODDS between", value1, value2, "firstOdds");
            return (Criteria) this;
        }

        public Criteria andFirstOddsNotBetween(String value1, String value2) {
            addCriterion("FIRST_ODDS not between", value1, value2, "firstOdds");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_odds
     *
     * @mbggenerated do_not_delete_during_merge Sat Jan 09 15:20:46 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_odds
     *
     * @mbggenerated Sat Jan 09 15:20:46 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}